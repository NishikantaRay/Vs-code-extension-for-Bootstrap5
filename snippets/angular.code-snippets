{
    "Angular Bootstrap 5 Component Template": {
        "prefix": "!bs5-angular",
        "body": [
            "<div class=\"${1:container}\">",
            "  <h1 class=\"${2:display-4}\">{{ ${3:title} }}</h1>",
            "  $0",
            "</div>"
        ],
        "description": "Bootstrap 5 Angular component template with interpolation"
    },
    
    "Angular Bootstrap Button with Click": {
        "prefix": "bs5-ng-btn",
        "body": [
            "<button",
            "  type=\"${1:button}\"",
            "  class=\"btn btn-${2:primary}\"",
            "  (click)=\"${3:handleClick}()\"",
            "  [disabled]=\"${4:isLoading}\"",
            ">",
            "  <span *ngIf=\"${4:isLoading}\" class=\"spinner-border spinner-border-sm me-2\"></span>",
            "  {{ ${5:buttonText} }}",
            "</button>"
        ],
        "description": "Angular Bootstrap button with click event and loading state"
    },
    
    "Angular Bootstrap Modal": {
        "prefix": "bs5-ng-modal",
        "body": [
            "<!-- Modal Trigger -->",
            "<button type=\"button\" class=\"btn btn-${1:primary}\" data-bs-toggle=\"modal\" [attr.data-bs-target]=\"'#${2:modal}' + ${3:modalId}\">",
            "  {{ ${4:triggerText} }}",
            "</button>",
            "",
            "<!-- Modal -->",
            "<div",
            "  class=\"modal fade\"",
            "  [id]=\"'${2:modal}' + ${3:modalId}\"",
            "  tabindex=\"-1\"",
            "  [attr.aria-labelledby]=\"'${2:modal}Label' + ${3:modalId}\"",
            "  aria-hidden=\"true\"",
            ">",
            "  <div class=\"modal-dialog${5: modal-lg}\">",
            "    <div class=\"modal-content\">",
            "      <div class=\"modal-header\">",
            "        <h5 class=\"modal-title\" [id]=\"'${2:modal}Label' + ${3:modalId}\">",
            "          {{ ${6:modalTitle} }}",
            "        </h5>",
            "        <button",
            "          type=\"button\"",
            "          class=\"btn-close\"",
            "          data-bs-dismiss=\"modal\"",
            "          aria-label=\"Close\"",
            "          (click)=\"${7:closeModal}()\"",
            "        ></button>",
            "      </div>",
            "      <div class=\"modal-body\">",
            "        {{ ${8:modalContent} }}",
            "      </div>",
            "      <div class=\"modal-footer\">",
            "        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" (click)=\"${7:closeModal}()\">",
            "          ${9:Close}",
            "        </button>",
            "        <button type=\"button\" class=\"btn btn-primary\" (click)=\"${10:saveChanges}()\">",
            "          ${11:Save changes}",
            "        </button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
        ],
        "description": "Angular Bootstrap modal with property binding and event handling"
    },
    
    "Angular Bootstrap Form with Reactive Forms": {
        "prefix": "bs5-ng-form",
        "body": [
            "<form [formGroup]=\"${1:formName}\" (ngSubmit)=\"${2:onSubmit}()\" novalidate>",
            "  <div class=\"mb-3\">",
            "    <label for=\"${3:fieldName}\" class=\"form-label\">{{ ${4:labelText} }}</label>",
            "    <input",
            "      type=\"${5:text}\"",
            "      class=\"form-control\"",
            "      [class.is-invalid]=\"${1:formName}.get('${3:fieldName}')?.invalid && ${1:formName}.get('${3:fieldName}')?.touched\"",
            "      [class.is-valid]=\"${1:formName}.get('${3:fieldName}')?.valid && ${1:formName}.get('${3:fieldName}')?.touched\"",
            "      id=\"${3:fieldName}\"",
            "      formControlName=\"${3:fieldName}\"",
            "      placeholder=\"${6:Enter value}\"",
            "    >",
            "    <div *ngIf=\"${1:formName}.get('${3:fieldName}')?.invalid && ${1:formName}.get('${3:fieldName}')?.touched\" class=\"invalid-feedback\">",
            "      <div *ngIf=\"${1:formName}.get('${3:fieldName}')?.errors?.['required']\">",
            "        ${4:labelText} is required",
            "      </div>",
            "      <div *ngIf=\"${1:formName}.get('${3:fieldName}')?.errors?.['minlength']\">",
            "        Minimum length is {{ ${1:formName}.get('${3:fieldName}')?.errors?.['minlength'].requiredLength }}",
            "      </div>",
            "    </div>",
            "    <div *ngIf=\"${1:formName}.get('${3:fieldName}')?.valid && ${1:formName}.get('${3:fieldName}')?.touched\" class=\"valid-feedback\">",
            "      Looks good!",
            "    </div>",
            "  </div>",
            "  $0",
            "  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"${1:formName}.invalid || ${7:isSubmitting}\">",
            "    <span *ngIf=\"${7:isSubmitting}\" class=\"spinner-border spinner-border-sm me-2\"></span>",
            "    {{ ${7:isSubmitting} ? '${8:Submitting...}' : '${9:Submit}' }}",
            "  </button>",
            "</form>"
        ],
        "description": "Angular Bootstrap form with reactive forms and validation"
    },
    
    "Angular Bootstrap Alert": {
        "prefix": "bs5-ng-alert",
        "body": [
            "<div",
            "  *ngIf=\"${1:showAlert}\"",
            "  class=\"alert alert-${2:primary} alert-dismissible fade show\"",
            "  role=\"alert\"",
            ">",
            "  <i class=\"${3:fas fa-info-circle} me-2\"></i>",
            "  {{ ${4:alertMessage} }}",
            "  <button",
            "    type=\"button\"",
            "    class=\"btn-close\"",
            "    (click)=\"${5:hideAlert}()\"",
            "    aria-label=\"Close\"",
            "  ></button>",
            "</div>"
        ],
        "description": "Angular Bootstrap alert with conditional rendering and dismiss functionality"
    },
    
    "Angular Bootstrap Card List with ngFor": {
        "prefix": "bs5-ng-card-list",
        "body": [
            "<div class=\"row\">",
            "  <div",
            "    *ngFor=\"let ${1:item} of ${2:items}; trackBy: ${3:trackByFn}\"",
            "    class=\"col-${4:md-6} col-${5:lg-4} mb-4\"",
            "  >",
            "    <div class=\"card h-100\">",
            "      <img",
            "        *ngIf=\"${1:item}.${6:imageUrl}\"",
            "        [src]=\"${1:item}.${6:imageUrl}\"",
            "        class=\"card-img-top\"",
            "        [alt]=\"${1:item}.${7:title}\"",
            "      >",
            "      <div class=\"card-body d-flex flex-column\">",
            "        <h5 class=\"card-title\">{{ ${1:item}.${7:title} }}</h5>",
            "        <p class=\"card-text flex-grow-1\">{{ ${1:item}.${8:description} }}</p>",
            "        <button",
            "          class=\"btn btn-${9:primary} mt-auto\"",
            "          (click)=\"${10:selectItem}(${1:item})\"",
            "        >",
            "          {{ ${11:buttonText} }}",
            "        </button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
        ],
        "description": "Angular Bootstrap card list with ngFor directive and trackBy function"
    },
    
    "Angular Bootstrap Navbar with Router": {
        "prefix": "bs5-ng-navbar",
        "body": [
            "<nav class=\"navbar navbar-expand-${1:lg} navbar-${2:light} bg-${2:light}\">",
            "  <div class=\"container${3:-fluid}\">",
            "    <a class=\"navbar-brand\" [routerLink]=\"'${4:/}'\">",
            "      {{ ${5:brandName} }}",
            "    </a>",
            "    <button",
            "      class=\"navbar-toggler\"",
            "      type=\"button\"",
            "      (click)=\"${6:toggleNavbar}()\"",
            "      [attr.aria-expanded]=\"${7:isNavbarOpen}\"",
            "      aria-controls=\"navbarNav\"",
            "      aria-label=\"Toggle navigation\"",
            "    >",
            "      <span class=\"navbar-toggler-icon\"></span>",
            "    </button>",
            "    <div",
            "      class=\"collapse navbar-collapse\"",
            "      [class.show]=\"${7:isNavbarOpen}\"",
            "      id=\"navbarNav\"",
            "    >",
            "      <ul class=\"navbar-nav${8: ms-auto}\">",
            "        <li *ngFor=\"let ${9:link} of ${10:navLinks}\" class=\"nav-item\">",
            "          <a",
            "            class=\"nav-link\"",
            "            [routerLink]=\"${9:link}.${11:path}\"",
            "            routerLinkActive=\"active\"",
            "            (click)=\"${12:closeNavbar}()\"",
            "          >",
            "            {{ ${9:link}.${13:text} }}",
            "          </a>",
            "        </li>",
            "      </ul>",
            "    </div>",
            "  </div>",
            "</nav>"
        ],
        "description": "Angular Bootstrap navbar with router integration and responsive toggle"
    },
    
    "Angular Bootstrap Table with Sorting": {
        "prefix": "bs5-ng-table",
        "body": [
            "<div class=\"table-responsive\">",
            "  <table class=\"table${1: table-striped table-hover}\">",
            "    <thead class=\"${2:table-dark}\">",
            "      <tr>",
            "        <th",
            "          *ngFor=\"let ${3:column} of ${4:columns}\"",
            "          scope=\"col\"",
            "          [class.user-select-none]=\"${3:column}.${5:sortable}\"",
            "          [style.cursor]=\"${3:column}.${5:sortable} ? 'pointer' : 'default'\"",
            "          (click)=\"${3:column}.${5:sortable} && ${6:sort}(${3:column}.${7:key})\"",
            "        >",
            "          {{ ${3:column}.${8:label} }}",
            "          <i",
            "            *ngIf=\"${3:column}.${5:sortable} && ${9:sortBy} === ${3:column}.${7:key}\"",
            "            [class]=\"{",
            "              'fas fa-sort-up': ${10:sortOrder} === 'asc',",
            "              'fas fa-sort-down': ${10:sortOrder} === 'desc'",
            "            }\"",
            "            class=\"ms-1\"",
            "          ></i>",
            "          <i",
            "            *ngIf=\"${3:column}.${5:sortable} && ${9:sortBy} !== ${3:column}.${7:key}\"",
            "            class=\"fas fa-sort ms-1 text-muted\"",
            "          ></i>",
            "        </th>",
            "      </tr>",
            "    </thead>",
            "    <tbody>",
            "      <tr *ngFor=\"let ${11:item} of ${12:sortedItems}; trackBy: ${13:trackByFn}\">",
            "        <td *ngFor=\"let ${3:column} of ${4:columns}\">",
            "          {{ ${11:item}[${3:column}.${7:key}] }}",
            "        </td>",
            "      </tr>",
            "      <tr *ngIf=\"!${12:sortedItems}?.length\">",
            "        <td [attr.colspan]=\"${4:columns}.length\" class=\"text-center text-muted\">",
            "          ${14:No data available}",
            "        </td>",
            "      </tr>",
            "    </tbody>",
            "  </table>",
            "</div>"
        ],
        "description": "Angular Bootstrap table with sorting functionality and trackBy"
    },
    
    "Angular Bootstrap Pagination": {
        "prefix": "bs5-ng-pagination",
        "body": [
            "<nav aria-label=\"${1:Page navigation}\">",
            "  <ul class=\"pagination${2: justify-content-center}\">",
            "    <li class=\"page-item\" [class.disabled]=\"${3:currentPage} === 1\">",
            "      <button",
            "        class=\"page-link\"",
            "        (click)=\"${4:goToPage}(${3:currentPage} - 1)\"",
            "        [disabled]=\"${3:currentPage} === 1\"",
            "        aria-label=\"Previous\"",
            "      >",
            "        <span aria-hidden=\"true\">&laquo;</span>",
            "      </button>",
            "    </li>",
            "    <li",
            "      *ngFor=\"let ${5:page} of ${6:visiblePages}\"",
            "      class=\"page-item\"",
            "      [class.active]=\"${5:page} === ${3:currentPage}\"",
            "    >",
            "      <button class=\"page-link\" (click)=\"${4:goToPage}(${5:page})\">",
            "        {{ ${5:page} }}",
            "      </button>",
            "    </li>",
            "    <li class=\"page-item\" [class.disabled]=\"${3:currentPage} === ${7:totalPages}\">",
            "      <button",
            "        class=\"page-link\"",
            "        (click)=\"${4:goToPage}(${3:currentPage} + 1)\"",
            "        [disabled]=\"${3:currentPage} === ${7:totalPages}\"",
            "        aria-label=\"Next\"",
            "      >",
            "        <span aria-hidden=\"true\">&raquo;</span>",
            "      </button>",
            "    </li>",
            "  </ul>",
            "</nav>"
        ],
        "description": "Angular Bootstrap pagination with property binding"
    },
    
    "Angular Bootstrap Dropdown": {
        "prefix": "bs5-ng-dropdown",
        "body": [
            "<div class=\"dropdown\">",
            "  <button",
            "    class=\"btn btn-${1:secondary} dropdown-toggle\"",
            "    type=\"button\"",
            "    [id]=\"'${2:dropdownMenu}' + ${3:dropdownId}\"",
            "    data-bs-toggle=\"dropdown\"",
            "    [attr.aria-expanded]=\"${4:isOpen}\"",
            "  >",
            "    {{ ${5:dropdownText} }}",
            "  </button>",
            "  <ul class=\"dropdown-menu\" [attr.aria-labelledby]=\"'${2:dropdownMenu}' + ${3:dropdownId}\">",
            "    <li *ngFor=\"let ${6:option} of ${7:options}\">",
            "      <a class=\"dropdown-item\" (click)=\"${8:selectOption}(${6:option})\" [class.active]=\"${9:selectedOption} === ${6:option}\">",
            "        {{ ${6:option}.${10:text} }}",
            "      </a>",
            "    </li>",
            "    <li *ngIf=\"!${7:options}?.length\">",
            "      <span class=\"dropdown-item-text text-muted\">${11:No options available}</span>",
            "    </li>",
            "  </ul>",
            "</div>"
        ],
        "description": "Angular Bootstrap dropdown with dynamic options and selection"
    },
    
    "Angular Bootstrap Progress Bar": {
        "prefix": "bs5-ng-progress",
        "body": [
            "<div class=\"progress${1: mb-3}\" style=\"height: ${2:20px}\">",
            "  <div",
            "    class=\"progress-bar${3: progress-bar-striped}${4: progress-bar-animated}\"",
            "    role=\"progressbar\"",
            "    [style.width.%]=\"${5:progressValue}\"",
            "    [attr.aria-valuenow]=\"${5:progressValue}\"",
            "    aria-valuemin=\"0\"",
            "    aria-valuemax=\"100\"",
            "  >",
            "    <span *ngIf=\"${6:showLabel}\">{{ ${5:progressValue} }}%</span>",
            "  </div>",
            "</div>"
        ],
        "description": "Angular Bootstrap progress bar with dynamic value and optional label"
    }
}