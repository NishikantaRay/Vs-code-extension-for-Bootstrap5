{
    "Vue Bootstrap 5 Template": {
        "prefix": "!bs5-vue",
        "body": [
            "<template>",
            "  <div class=\"${1:container}\">",
            "    <h1 class=\"${2:display-4}\">{{ ${3:title} }}</h1>",
            "    $0",
            "  </div>",
            "</template>",
            "",
            "<script>",
            "export default {",
            "  name: '${4:Component}',",
            "  data() {",
            "    return {",
            "      ${3:title}: '${5:Hello Bootstrap 5!}'",
            "    }",
            "  }",
            "}",
            "</script>",
            "",
            "<style scoped>",
            "/* Bootstrap 5 is assumed to be imported globally */",
            "</style>"
        ],
        "description": "Bootstrap 5 Vue.js component template with reactive data"
    },
    
    "Vue Bootstrap Button with Event": {
        "prefix": "bs5-vue-btn",
        "body": [
            "<button",
            "  type=\"${1:button}\"",
            "  class=\"btn btn-${2:primary}\"",
            "  @click=\"${3:handleClick}\"",
            "  :disabled=\"${4:isLoading}\"",
            ">",
            "  <span v-if=\"${4:isLoading}\" class=\"spinner-border spinner-border-sm me-2\"></span>",
            "  {{ ${5:buttonText} }}",
            "</button>"
        ],
        "description": "Vue.js Bootstrap button with click event and loading state"
    },
    
    "Vue Bootstrap Modal": {
        "prefix": "bs5-vue-modal",
        "body": [
            "<div",
            "  class=\"modal fade\"",
            "  :id=\"'${1:modal}' + ${2:modalId}\"",
            "  tabindex=\"-1\"",
            "  :aria-labelledby=\"'${1:modal}Label' + ${2:modalId}\"",
            "  aria-hidden=\"true\"",
            "  ref=\"${1:modal}\"",
            ">",
            "  <div class=\"modal-dialog${3: modal-lg}\">",
            "    <div class=\"modal-content\">",
            "      <div class=\"modal-header\">",
            "        <h5 class=\"modal-title\" :id=\"'${1:modal}Label' + ${2:modalId}\">",
            "          {{ ${4:modalTitle} }}",
            "        </h5>",
            "        <button",
            "          type=\"button\"",
            "          class=\"btn-close\"",
            "          data-bs-dismiss=\"modal\"",
            "          aria-label=\"Close\"",
            "          @click=\"${5:closeModal}\"",
            "        ></button>",
            "      </div>",
            "      <div class=\"modal-body\">",
            "        {{ ${6:modalContent} }}",
            "      </div>",
            "      <div class=\"modal-footer\">",
            "        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" @click=\"${5:closeModal}\">",
            "          ${7:Close}",
            "        </button>",
            "        <button type=\"button\" class=\"btn btn-primary\" @click=\"${8:saveChanges}\">",
            "          ${9:Save changes}",
            "        </button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
        ],
        "description": "Vue.js Bootstrap modal with reactive properties and methods"
    },
    
    "Vue Bootstrap Form with Validation": {
        "prefix": "bs5-vue-form",
        "body": [
            "<form @submit.prevent=\"${1:handleSubmit}\" novalidate>",
            "  <div class=\"mb-3\">",
            "    <label for=\"${2:inputId}\" class=\"form-label\">{{ ${3:labelText} }}</label>",
            "    <input",
            "      type=\"${4:text}\"",
            "      class=\"form-control\"",
            "      :class=\"{ 'is-invalid': ${5:errors}.${2:inputId}, 'is-valid': ${6:touched}.${2:inputId} && !${5:errors}.${2:inputId} }\"",
            "      id=\"${2:inputId}\"",
            "      v-model=\"${7:formData}.${2:inputId}\"",
            "      :placeholder=\"${8:placeholder}\"",
            "      @blur=\"${9:validateField}('${2:inputId}')\"",
            "    >",
            "    <div v-if=\"${5:errors}.${2:inputId}\" class=\"invalid-feedback\">",
            "      {{ ${5:errors}.${2:inputId} }}",
            "    </div>",
            "    <div v-else-if=\"${6:touched}.${2:inputId}\" class=\"valid-feedback\">",
            "      ${10:Looks good!}",
            "    </div>",
            "  </div>",
            "  $0",
            "  <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"${11:isSubmitting}\">",
            "    <span v-if=\"${11:isSubmitting}\" class=\"spinner-border spinner-border-sm me-2\"></span>",
            "    {{ ${11:isSubmitting} ? '${12:Submitting...}' : '${13:Submit}' }}",
            "  </button>",
            "</form>"
        ],
        "description": "Vue.js Bootstrap form with validation states and reactive data binding"
    },
    
    "Vue Bootstrap Alert": {
        "prefix": "bs5-vue-alert",
        "body": [
            "<div",
            "  v-if=\"${1:showAlert}\"",
            "  class=\"alert alert-${2:primary} alert-dismissible fade show\"",
            "  role=\"alert\"",
            ">",
            "  <i class=\"${3:fas fa-info-circle} me-2\"></i>",
            "  {{ ${4:alertMessage} }}",
            "  <button",
            "    type=\"button\"",
            "    class=\"btn-close\"",
            "    @click=\"${5:hideAlert}\"",
            "    aria-label=\"Close\"",
            "  ></button>",
            "</div>"
        ],
        "description": "Vue.js Bootstrap alert with conditional rendering and dismiss functionality"
    },
    
    "Vue Bootstrap Card with v-for": {
        "prefix": "bs5-vue-card-list",
        "body": [
            "<div class=\"row\">",
            "  <div",
            "    v-for=\"${1:item} in ${2:items}\"",
            "    :key=\"${1:item}.${3:id}\"",
            "    class=\"col-${4:md-6} col-${5:lg-4} mb-4\"",
            "  >",
            "    <div class=\"card h-100\">",
            "      <img",
            "        v-if=\"${1:item}.${6:image}\"",
            "        :src=\"${1:item}.${6:image}\"",
            "        class=\"card-img-top\"",
            "        :alt=\"${1:item}.${7:title}\"",
            "      >",
            "      <div class=\"card-body d-flex flex-column\">",
            "        <h5 class=\"card-title\">{{ ${1:item}.${7:title} }}</h5>",
            "        <p class=\"card-text flex-grow-1\">{{ ${1:item}.${8:description} }}</p>",
            "        <button",
            "          class=\"btn btn-${9:primary} mt-auto\"",
            "          @click=\"${10:selectItem}(${1:item})\"",
            "        >",
            "          {{ ${11:buttonText} }}",
            "        </button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
        ],
        "description": "Vue.js Bootstrap card list with v-for directive and responsive grid"
    },
    
    "Vue Bootstrap Navbar": {
        "prefix": "bs5-vue-navbar",
        "body": [
            "<nav class=\"navbar navbar-expand-${1:lg} navbar-${2:light} bg-${2:light}\">",
            "  <div class=\"container${3:-fluid}\">",
            "    <router-link class=\"navbar-brand\" to=\"${4:/}\">",
            "      {{ ${5:brandName} }}",
            "    </router-link>",
            "    <button",
            "      class=\"navbar-toggler\"",
            "      type=\"button\"",
            "      @click=\"${6:isNavbarOpen} = !${6:isNavbarOpen}\"",
            "      aria-controls=\"navbarNav\"",
            "      :aria-expanded=\"${6:isNavbarOpen}\"",
            "      aria-label=\"Toggle navigation\"",
            "    >",
            "      <span class=\"navbar-toggler-icon\"></span>",
            "    </button>",
            "    <div",
            "      class=\"collapse navbar-collapse\"",
            "      :class=\"{ show: ${6:isNavbarOpen} }\"",
            "      id=\"navbarNav\"",
            "    >",
            "      <ul class=\"navbar-nav${7: ms-auto}\">",
            "        <li",
            "          v-for=\"${8:link} in ${9:navLinks}\"",
            "          :key=\"${8:link}.${10:path}\"",
            "          class=\"nav-item\"",
            "        >",
            "          <router-link",
            "            class=\"nav-link\"",
            "            :to=\"${8:link}.${10:path}\"",
            "            @click=\"${6:isNavbarOpen} = false\"",
            "          >",
            "            {{ ${8:link}.${11:text} }}",
            "          </router-link>",
            "        </li>",
            "      </ul>",
            "    </div>",
            "  </div>",
            "</nav>"
        ],
        "description": "Vue.js Bootstrap navbar with Vue Router integration and responsive toggle"
    },
    
    "Vue Bootstrap Table with Sorting": {
        "prefix": "bs5-vue-table",
        "body": [
            "<div class=\"table-responsive\">",
            "  <table class=\"table${1: table-striped table-hover}\">",
            "    <thead class=\"${2:table-dark}\">",
            "      <tr>",
            "        <th",
            "          v-for=\"${3:column} in ${4:columns}\"",
            "          :key=\"${3:column}.${5:key}\"",
            "          scope=\"col\"",
            "          @click=\"${6:sort}(${3:column}.${5:key})\"",
            "          :class=\"{ 'user-select-none': ${3:column}.${7:sortable} }\"",
            "          style=\"cursor: pointer\"",
            "        >",
            "          {{ ${3:column}.${8:label} }}",
            "          <i",
            "            v-if=\"${3:column}.${7:sortable} && ${9:sortBy} === ${3:column}.${5:key}\"",
            "            :class=\"{",
            "              'fas fa-sort-up': ${10:sortOrder} === 'asc',",
            "              'fas fa-sort-down': ${10:sortOrder} === 'desc'",
            "            }\"",
            "            class=\"ms-1\"",
            "          ></i>",
            "          <i",
            "            v-else-if=\"${3:column}.${7:sortable}\"",
            "            class=\"fas fa-sort ms-1 text-muted\"",
            "          ></i>",
            "        </th>",
            "      </tr>",
            "    </thead>",
            "    <tbody>",
            "      <tr v-for=\"${11:item} in ${12:sortedItems}\" :key=\"${11:item}.${13:id}\">",
            "        <td v-for=\"${3:column} in ${4:columns}\" :key=\"${3:column}.${5:key}\">",
            "          {{ ${11:item}[${3:column}.${5:key}] }}",
            "        </td>",
            "      </tr>",
            "      <tr v-if=\"!${12:sortedItems}.length\">",
            "        <td :colspan=\"${4:columns}.length\" class=\"text-center text-muted\">",
            "          ${14:No data available}",
            "        </td>",
            "      </tr>",
            "    </tbody>",
            "  </table>",
            "</div>"
        ],
        "description": "Vue.js Bootstrap table with sorting functionality and responsive design"
    },
    
    "Vue Bootstrap Pagination": {
        "prefix": "bs5-vue-pagination",
        "body": [
            "<nav aria-label=\"${1:Page navigation}\">",
            "  <ul class=\"pagination${2: justify-content-center}\">",
            "    <li class=\"page-item\" :class=\"{ disabled: ${3:currentPage} === 1 }\">",
            "      <button",
            "        class=\"page-link\"",
            "        @click=\"${4:goToPage}(${3:currentPage} - 1)\"",
            "        :disabled=\"${3:currentPage} === 1\"",
            "        aria-label=\"Previous\"",
            "      >",
            "        <span aria-hidden=\"true\">&laquo;</span>",
            "      </button>",
            "    </li>",
            "    <li",
            "      v-for=\"${5:page} in ${6:visiblePages}\"",
            "      :key=\"${5:page}\"",
            "      class=\"page-item\"",
            "      :class=\"{ active: ${5:page} === ${3:currentPage} }\"",
            "    >",
            "      <button class=\"page-link\" @click=\"${4:goToPage}(${5:page})\">",
            "        {{ ${5:page} }}",
            "      </button>",
            "    </li>",
            "    <li class=\"page-item\" :class=\"{ disabled: ${3:currentPage} === ${7:totalPages} }\">",
            "      <button",
            "        class=\"page-link\"",
            "        @click=\"${4:goToPage}(${3:currentPage} + 1)\"",
            "        :disabled=\"${3:currentPage} === ${7:totalPages}\"",
            "        aria-label=\"Next\"",
            "      >",
            "        <span aria-hidden=\"true\">&raquo;</span>",
            "      </button>",
            "    </li>",
            "  </ul>",
            "</nav>"
        ],
        "description": "Vue.js Bootstrap pagination with dynamic page calculation"
    }
}